{"version":3,"sources":["components/QuestionCard.js","components/Question.js","components/AddQuestion.js","App.js","serviceWorker.js","index.js"],"names":["QuestionCard","react_default","a","createElement","Card","Content","Header","className","this","props","question","name","Icon","disabled","Meta","tags","map","x","Description","extra","Button","basic","color","Component","Question","console","log","Group","questionData","components_QuestionCard","AddQuestion","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleOnClickAsk","bind","assertThisInitialized","handleOnClickAnswer","handleOnClickInput","state","asking","setState","alert","onAddQuestion","Input","action","onClick","placeholder","App","hostname","window","location","foundQuestions","questions","filter","domains","indexOf","toLowerCase","value","handleChange","handleClickOutside","handleAddQuestion","document","addEventListener","removeEventListener","event","target","t","all","selection","createRange","text","getSelection","focusNode","data","newQuestion","concat","toConsumableArray","Message","floating","id","type","onChange","components_Question","components_AddQuestion","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ee058e2.chunk.js","sourcesContent":["import React, {Component} from 'react';\n// import {Container, List, Button} from 'semantic-ui-react';\nimport { Button, Card, Image, Icon } from 'semantic-ui-react'\n\nclass QuestionCard extends Component {\n  render() {\n    return (\n   <Card>\n     <Card.Content>\n       <Card.Header>\n      <div className=\"qitw_col\">\n        <div>{this.props.question.name}</div>\n        <Icon disabled name='times' />\n\n      </div>\n     </Card.Header>\n       <Card.Meta>\n         {this.props.question.tags.map(x=> <span className=\"qitw_tag\">{x}</span>)}\n\n       </Card.Meta>\n       <Card.Description>\n       </Card.Description>\n     </Card.Content>\n     <Card.Content extra>\n       <div className='ui two buttons'>\n         <Button basic color='green'>\n           Submit\n         </Button>\n         <Button basic color='red'>\n           Skip\n         </Button>\n       </div>\n     </Card.Content>\n   </Card>\n\n\n\n    );\n  }\n};\n\nexport default QuestionCard;\n","import React, {Component} from 'react';\n// import {Container, List, Button} from 'semantic-ui-react';\nimport { Button, Card, Image, Icon } from 'semantic-ui-react'\nimport QuestionCard from './QuestionCard';\n\nclass Question extends Component {\n  render() {\n    console.log(this.props)\n    return (\n      <Card.Group>\n        { this.props.questionData.map(x=><QuestionCard question={x}/>)\n}\n</Card.Group>\n\n    );\n  }\n};\n\nexport default Question;\n","import React, {Component} from 'react';\nimport {Card, Button, Input} from 'semantic-ui-react';\n\nclass AddQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnClickAsk = this.handleOnClickAsk.bind(this);\n    this.handleOnClickAnswer = this.handleOnClickAnswer.bind(this);\n    this.handleOnClickInput = this.handleOnClickInput.bind(this);\n\n    this.state = {asking: false};\n  }\n\n  handleOnClickAsk() {\n    this.setState({asking: true});\n  }\n\n  handleOnClickAnswer() {\n    alert(\"answer question i guess\");\n  }\n\n  handleOnClickInput() {\n    this.setState({asking: false});\n    this.props.onAddQuestion();\n  }\n\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header>\n        <div className=\"qitw_col\">\n          <div>Contribute</div>\n        </div>\n        </Card.Header>\n        </Card.Content>\n        <Card.Content extra>\n          {this.state.asking ?\n            <Input action={<Button onClick={this.handleOnClickInput}>Add</Button>} placeholder='Type...' />\n            :\n            <Button basic color='green' onClick={this.handleOnClickAsk}>\n              Add a Question\n            </Button>\n          }\n          <Button basic color='blue' onClick={this.handleOnClickAnswer}>\n            Answer a Question\n          </Button>\n        </Card.Content>\n    </Card>\n \n    );\n  }\n};\n\nexport default AddQuestion;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Question from './components/Question';\nimport questionData from './questions.json';\nimport AddQuestion from './components/AddQuestion';\nimport { Message } from 'semantic-ui-react'\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      var hostname = window.location.hostname;\n      console.log(hostname)\n      hostname = hostname === \"localhost\" ? \"kubernetes.io\": hostname;\n\n      var foundQuestions = questionData.questions.filter(x=> x.domains.indexOf(hostname.toLowerCase())> -1 );\n\n      this.state = {value: '', questions: foundQuestions};\n\n\n      this.handleChange = this.handleChange.bind(this);\n      // this.handleSubmit = this.handleSubmit.bind(this);  this.setWrapperRef = this.setWrapperRef.bind(this);\n      this.handleClickOutside = this.handleClickOutside.bind(this);\n      this.handleAddQuestion = this.handleAddQuestion.bind(this);\n      // this.handleDomain = this.handleDomain.bind(this);\n      // this.handleDomain();\n    }\n\n\n\ncomponentDidMount() {\n  document.addEventListener('mouseup', this.handleClickOutside);\n}\n\ncomponentWillUnmount() {\n  document.removeEventListener('mouseup', this.handleClickOutside);\n}\nhandleChange(event) {\n  this.setState({value: event.target.value});\n}\nhandleClickOutside(event) {\n  console.log(event)\n  var t = (document.all) ? document.selection.createRange().text : document.getSelection();\n  console.log(t)\n  this.setState({value: t.focusNode.data})\n   // if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n   //   alert('You clicked outside of me!');\n   // }\n }\n\n handleDomain(){\n   // var hostname = window.location.hostname\n   // console.log(hostname);\n   // console.log(this)\n   // console.log(\"handleDomain\", this.state.questions.filter(x=> x.domains.indexOf(hostname.toLowerCase())> -1 ))\n   // var foundQuestions = this.state.questions.filter(x=> x.domains.indexOf(hostname.toLowerCase())> -1 );\n   // console.log(\"foundQuestions\", foundQuestions)\n   //\n   // this.setState({questions: foundQuestions})\n\n }\n handleAddQuestion(newQuestion) {\n  alert(\"addq\");\n  this.setState({\n    foundQuestions: [\n      newQuestion,\n      ...this.state.foundQuestions\n    ]\n  });\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Message floating>\n          You highlighted:\n          {this.state.value}\n\n          <input id=\"myinput\"  type=\"hidden\" name=\"highlightedText\" value={this.state.value} onChange={this.handleChange}/>\n        </Message>\n        <Question questionData={this.state.questions} />\n        <AddQuestion onAddQuestion={this.handleAddQuestion}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}